name: ci

on:
  push:

env:
  TEST_TAG: visualphoenix/sshd:test
  LATEST_TAG: visualphoenix/sshd:latest

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}

      - name: Install SSH client and generate SSH key
        run: |
          sudo apt-get update && sudo apt-get install -y openssh-client
          ssh-keygen -t rsa -b 4096 -f id_rsa -q -N ""
          base64 -w0 id_rsa.pub > id_rsa.pub.b64
          echo "AUTHORIZED_KEYS=$(cat id_rsa.pub.b64)" >> $GITHUB_ENV

      - name: Run sshd container
        run: |
          docker run -d --name sshd_test \
            -p 127.0.0.1:2222:22 \
            -e AUTHORIZED_KEYS="${{ env.AUTHORIZED_KEYS }}" \
            ${{ env.TEST_TAG }}

      - name: Test SSH connection
        run: |
          test -f id_rsa && echo "Found private key" || echo "No private key"
          RETRY=100
          while ! nc -z -w5 127.0.0.1 2222 &>/dev/null || \
                ! ssh -o PasswordAuthentication=no \
                      -o StrictHostKeyChecking=no \
                      -o UserKnownHostsFile=/dev/null \
                      -p 2222 \
                      -i id_rsa \
                      root@127.0.0.1 \
                      /bin/sh -c 'true' &>/dev/null; do
            if [ $RETRY -le 0 ]; then
              echo "Failed to connect to SSH server"
              exit 1
            fi
            echo "Retrying SSH connection..."
            RETRY=$((RETRY-1))
            sleep 0.1
          done
          echo "SSH connection successful!"
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.LATEST_TAG }}
