name: ci

on:
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"
  pull_request:
  release:
    types: [created]

env:
  IMAGE_ID: visualphoenix/sshd
  TEST_TAG: test
  LATEST_TAG: latest

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: openssh-client
          version: 1.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.IMAGE_ID }}            
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ env.IMAGE_ID }}:${{ env.TEST_TAG }}

      - name: Install SSH client and generate SSH key
        run: |
          ssh-keygen -t rsa -b 4096 -f id_rsa -q -N ""
          base64 -w0 id_rsa.pub > id_rsa.pub.b64
          echo "AUTHORIZED_KEYS=$(cat id_rsa.pub.b64)" >> $GITHUB_ENV

      - name: Run sshd container
        run: |
          docker run -d --name sshd_test \
            -p 127.0.0.1:2222:22 \
            -e AUTHORIZED_KEYS="${{ env.AUTHORIZED_KEYS }}" \
            ${{ env.IMAGE_ID }}:${{ env.TEST_TAG }}

      - name: Test SSH connection
        run: |
          test -f id_rsa && echo "Found private key" || echo "No private key"
          RETRY=100
          while ! nc -z -w5 127.0.0.1 2222 &>/dev/null || \
                ! ssh -o PasswordAuthentication=no \
                      -o StrictHostKeyChecking=no \
                      -o UserKnownHostsFile=/dev/null \
                      -p 2222 \
                      -i id_rsa \
                      root@127.0.0.1 \
                      /bin/sh -c 'true' &>/dev/null; do
            if [ $RETRY -le 0 ]; then
              echo "Failed to connect to SSH server"
              exit 1
            fi
            echo "Retrying SSH connection..."
            RETRY=$((RETRY-1))
            sleep 0.1
          done
          echo "SSH connection successful!"

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.IMAGE_ID }}
          short-description: ${{ github.event.repository.description }}
